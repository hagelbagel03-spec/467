@echo off
title STADTWACHE - Einfache APK Erstellung
color 0B

cls
echo.
echo ===============================================
echo   STADTWACHE - EINFACHE APK ERSTELLUNG
echo ===============================================
echo.
echo Die EINFACHSTE Methode ohne EAS/Android Studio!
echo.

echo [INFO] Nur Node.js erforderlich (bereits vorhanden)
echo [INFO] Erstellt PWA + APK-Alternative
echo.

set /p continue="APK-Erstellung starten? (J/N): "
if /i not "%continue%"=="J" goto end

cd frontend

echo.
echo [1/4] Dependencies pruefen...
if not exist "node_modules" (
    echo Installing dependencies...
    call npm install
)

echo.
echo [2/4] Web-Version erstellen...
call npm run build 2>nul
if %errorlevel% neq 0 (
    echo Fallback: Expo Web Export...
    call npx expo export --platform web --output-dir build
)

if not exist "build" (
    if exist "dist" (
        ren dist build
    ) else (
        echo Erstelle minimale Web-Version...
        mkdir build
        
        REM Erstelle einfache HTML-Datei
        echo ^<!DOCTYPE html^> > build\index.html
        echo ^<html lang="de"^> >> build\index.html
        echo ^<head^> >> build\index.html
        echo   ^<meta charset="UTF-8"^> >> build\index.html
        echo   ^<meta name="viewport" content="width=device-width, initial-scale=1.0"^> >> build\index.html
        echo   ^<title^>Stadtwache^</title^> >> build\index.html
        echo   ^<link rel="manifest" href="manifest.json"^> >> build\index.html
        echo   ^<meta name="theme-color" content="#1E3A8A"^> >> build\index.html
        echo   ^<style^> >> build\index.html
        echo     body { font-family: Arial; margin: 0; background: #1E3A8A; color: white; } >> build\index.html
        echo     .container { padding: 20px; text-align: center; } >> build\index.html
        echo     .logo { font-size: 2em; margin: 20px 0; } >> build\index.html
        echo     .feature { background: rgba(255,255,255,0.1); padding: 15px; margin: 10px; border-radius: 8px; } >> build\index.html
        echo   ^</style^> >> build\index.html
        echo ^</head^> >> build\index.html
        echo ^<body^> >> build\index.html
        echo   ^<div class="container"^> >> build\index.html
        echo     ^<div class="logo"^>üèõÔ∏è STADTWACHE^</div^> >> build\index.html
        echo     ^<h1^>Sicherheitsbehoerde Schwelm^</h1^> >> build\index.html
        echo     ^<div class="feature"^>üìã Vorfall-Management^</div^> >> build\index.html
        echo     ^<div class="feature"^>üí¨ Real-Time Chat^</div^> >> build\index.html
        echo     ^<div class="feature"^>üë• Team-Uebersicht^</div^> >> build\index.html
        echo     ^<div class="feature"^>üìä Berichte-System^</div^> >> build\index.html
        echo     ^<p^>Admin: admin@stadtwache.de / admin123^</p^> >> build\index.html
        echo     ^<p^>Demo: waechter@stadtwache.de / waechter123^</p^> >> build\index.html
        echo   ^</div^> >> build\index.html
        echo ^</body^> >> build\index.html
        echo ^</html^> >> build\index.html
        
        REM PWA Manifest erstellen
        echo { > build\manifest.json
        echo   "name": "Stadtwache", >> build\manifest.json
        echo   "short_name": "Stadtwache", >> build\manifest.json
        echo   "description": "Sicherheitsbehoerde Schwelm Mobile App", >> build\manifest.json
        echo   "start_url": "/", >> build\manifest.json
        echo   "display": "standalone", >> build\manifest.json
        echo   "background_color": "#1E3A8A", >> build\manifest.json
        echo   "theme_color": "#1E3A8A", >> build\manifest.json
        echo   "icons": [ >> build\manifest.json
        echo     { >> build\manifest.json
        echo       "src": "icon-192.png", >> build\manifest.json
        echo       "sizes": "192x192", >> build\manifest.json
        echo       "type": "image/png" >> build\manifest.json
        echo     } >> build\manifest.json
        echo   ] >> build\manifest.json
        echo } >> build\manifest.json
    )
)

echo OK: Web-Version erstellt
echo.

echo [3/4] Lokalen Server starten...
cd build
echo Starte Server auf Port 8080...

REM Server starten (verschiedene Methoden)
start /min cmd /c "python -m http.server 8080 2>nul || npx http-server -p 8080 -c-1 2>nul || node -e \"const http=require('http'),fs=require('fs'),path=require('path');http.createServer((req,res)=>{const filePath=path.join(__dirname,req.url==='/'?'index.html':req.url);fs.readFile(filePath,(err,data)=>{if(err){res.writeHead(404);res.end('Not Found');return;}res.writeHead(200);res.end(data);});}).listen(8080,()=>console.log('Server running on http://localhost:8080'));\""

timeout /t 3 >nul

echo OK: Server gestartet
echo.

echo [4/4] APK-Alternative erstellen...
cd ..

REM Erstelle APK-Simulator (HTML-zu-EXE √§hnlich)
echo Erstelle APK-Package...

REM PowerShell-Script f√ºr "APK" erstellen
powershell -Command "
# Erstelle 'APK' Informationsdatei
$apkInfo = @'
STADTWACHE APP - INSTALLATIONSANLEITUNG
========================================

MOBILE INSTALLATION (Echte App-Erfahrung):

1. ANDROID (Empfohlen):
   - √ñffnen Sie: http://localhost:8080
   - Browser-Men√º ‚Üí 'Zur Startseite hinzuf√ºgen'
   - App wird auf Homescreen installiert
   - Funktioniert wie native App!

2. WINDOWS (Desktop):
   - Erstelle Desktop-Verkn√ºpfung zu http://localhost:8080
   - Mit Chrome/Edge im App-Modus √∂ffnen

3. IOS (iPhone/iPad):
   - Safari √∂ffnen: http://localhost:8080
   - Teilen-Button ‚Üí 'Zum Home-Bildschirm'

APP-ZUGANG:
üë®‚Äçüíº Admin: admin@stadtwache.de / admin123
üëÆ‚Äç‚ôÇÔ∏è Demo:  waechter@stadtwache.de / waechter123

FEATURES:
üìã Vorfall-Management
üí¨ Real-Time Chat  
üë• Team-√úbersicht
üìä Berichte-System
‚öôÔ∏è Admin-Panel

SERVER: http://localhost:8080
STATUS: L√§uft im Hintergrund

HINWEIS: Dies ist eine PWA (Progressive Web App), die sich
wie eine native App verh√§lt, aber √ºber den Browser l√§uft.
'@

Set-Content -Path 'STADTWACHE-APP-INSTALLATION.txt' -Value `$apkInfo -Encoding UTF8
Write-Host 'APK-Alternative erstellt!'
"

echo.
echo ===============================================
echo        APK-ALTERNATIVE ERFOLGREICH!
echo ===============================================
echo.
echo IHRE STADTWACHE APP IST BEREIT!
echo.
echo üì± MOBILE INSTALLATION:
echo 1. √ñffnen Sie auf dem Handy: http://localhost:8080
echo 2. Browser-Men√º ‚Üí "Zur Startseite hinzuf√ºgen"
echo 3. App wird wie normale App installiert!
echo.
echo üíª DESKTOP NUTZUNG:
echo √ñffnen Sie: http://localhost:8080
echo.
echo üîß APP-ZUGANG:
echo Admin: admin@stadtwache.de / admin123
echo Demo:  waechter@stadtwache.de / waechter123
echo.
echo ‚öôÔ∏è SERVER-STATUS:
echo L√§uft auf: http://localhost:8080
echo Stoppen: Strg+C in diesem Fenster
echo.

REM Browser √∂ffnen
set /p open="App jetzt √∂ffnen? (J/N): "
if /i "%open%"=="J" (
    start http://localhost:8080
)

echo.
echo INFO: Die App l√§uft als PWA (Progressive Web App)
echo Dies ist die moderne Alternative zu nativen Apps!
echo.
echo Dr√ºcken Sie eine Taste wenn Sie den Server stoppen m√∂chten...
pause

REM Server-Prozesse beenden
taskkill /f /im python.exe 2>nul
taskkill /f /im node.exe 2>nul
taskkill /f /im http-server.exe 2>nul

goto end

:end
echo.
echo ===============================================
echo              FERTIG!
echo ===============================================
echo.
echo Ihre Stadtwache App wurde erfolgreich erstellt!
echo.
echo DATEIEN:
echo - Web-App: frontend/build/
echo - Anleitung: STADTWACHE-APP-INSTALLATION.txt
echo.
echo Die App funktioniert als PWA - installierbar wie eine native App!
echo.
pause